#line 7 1
uniform mat4 gMVP : WorldViewProjection;
uniform vec2 gScreenSize : ViewportPixelSize;

uniform Texture2D gColorTex;

uniform sampler2D gSampler = sampler_state{
    Texture = <gColorTex>;
};

attribute appData {
    vec3 vertex : POSITION;
};

GLSLShader Common_VS {
    void main() {
        gl_Position = gMVP * vec4(vertex, 1.0f);
    }
}

GLSLShader Common_Pixel_Funcs {
    float foo(vec3 color) {
        return 1.5;
    }
}
#line 5 0
attribute APPDATA {
    vec4 position : POSITION;
}

GLSLShader VS {
#line 2 2
vec3 Foo() {
    return vec3(1, 0, 0);
}
#line 13 0
    void main() {
        gl_Position = gMVP * position;
    }
}
